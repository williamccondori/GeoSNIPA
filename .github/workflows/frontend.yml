name: CI/CD pipeline

on:
  push:
    branches: ["main"]
    # paths:
    #  - frontend/**
    
env:
  PROJECT_NAME: geosnipa-frontend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build
        id: build
        run: |
          cd frontend
          docker build -t ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }} -t ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:latest .
      
      - name: Push
        run: |
          docker push ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}
          docker push ${{ vars.DOCKER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/${{ env.PROJECT_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/master')
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        run: |
          ssh-keyscan ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh -i ${{ env.SSH_PRIVATE_KEY }} ${{ env.SSH_USER }}@${{ env.SSH_HOST }} "docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/frontend:${{ env.SHA }} && docker-compose -f frontend/docker-compose.yml up -d --no-deps --build frontend"
